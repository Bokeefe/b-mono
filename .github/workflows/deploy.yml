name: Deploy to AWS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.11.0'  # Specify your exact Node.js version

    - name: Install Root Dependencies
      run: npm install  # Installs dependencies defined in the root package.json

    - name: Clean and Install Frontend Dependencies
      run: |
        rm -rf ./react-fe/node_modules  # Remove existing node_modules for clean slate
        npm install --prefix ./react-fe  # Install dependencies from the react-fe directory

    - name: Build Frontend
      run: npm run build --prefix ./react-fe  # Ensure build from frontend directory

    - name: Install Nest Server Dependencies
      run: npm install --prefix ./nest-server

    - name: Build Backend Docker Image
      run: |
        docker build -t my-backend:latest ./nest-server  # Adjust this path as necessary

    - name: Tag Backend Image for ECR
      run: |
        docker tag my-backend:latest 692859927760.dkr.ecr.us-west-2.amazonaws.com/bverse/b-mono:latest

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 692859927760.dkr.ecr.us-west-2.amazonaws.com

    - name: Push Backend Docker Image to ECR
      run: |
        docker push 692859927760.dkr.ecr.us-west-2.amazonaws.com/bverse/b-mono:latest

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json 
        service: b-mono-service
        cluster: b-mono-cluster
        desired-count: 1  # Specify desired count for the service
        wait-for-service-stability: true
